name: build_and_upload_release

on:
  push:
    branches:
      - 'master'

jobs:
  build_wheels:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Setup NodeJS LTS 🕸️
        uses: actions/setup-node@v3
        with:
          node-version: 16.18

      - name: Setup Python 🐍
        uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Install Dependencies 📥
        run: |
          make venv
          make node_modules

      - name: Build Theme 🏗️
        run: make -o node_modules build-theme

      - name: Build Wheels ☸️
        run: make -o build-theme build-wheels

      - name: Save Artifact 💾
        uses: actions/upload-artifact@v3
        with:
          retention-days: 1
          path: ./dist
          name: dff-sphinx-theme-wheel

  upload_release_to_pypi:
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:

      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Setup Python 🐍
        uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Install Dependencies 📥
        run: pip install --upgrade pip twine

      - name: Restore Artifact 📚
        uses: actions/download-artifact@v3
        with:
          path: ./dist
          name: dff-sphinx-theme-wheel

      - name: Upload Binaries to PyPi via Twine 🪢
        env:
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: twine upload --verbose -u '__token__' dist/*

  upload_release_to_github:
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:

      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Restore Artifact 📚
        uses: actions/download-artifact@v3
        with:
          path: ./dist
          name: dff-sphinx-theme-wheel

      - name: Get Release Tag Name 🏷️
        run: echo "TAG=$(make print-version)" >> $GITHUB_ENV

      - name: Upload Binaries to GitHub Releases 📦
        uses: svenstaro/upload-release-action@v2
        with:
          file: dist/*
          tag: ${{ env.TAG }}
          overwrite: true
          file_glob: true

  deploy_demo_module_to_github_pages:
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:

      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Restore Artifact 📚
        uses: actions/download-artifact@v3
        with:
          path: ./dist
          name: dff-sphinx-theme-wheel

      - name: Setup Python 🐍
        uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Install Dependencies and Wheels 📩
        run: make -o build-wheels demo-install

      - name: Build Demo Module 👁️
        run: make DEMO_BASE_URL="/dff_sphinx_theme/" -o demo-install build-demo

      - name: NoJekyll ❌
        run: touch ./web-build/.nojekyll

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: ./web-build/
          single-commit: True

  clear_and_delete_artifacts:
    needs: [upload_release_to_pypi, upload_release_to_github, deploy_demo_module_to_github_pages]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:

      - name: Delete Artifact 🧽
        uses: geekyeggo/delete-artifact@v2
        with:
          name: dff-sphinx-theme-wheel
