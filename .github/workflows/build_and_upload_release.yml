name: build_and_upload_release

on:
  push:
    branches:
      - 'master'

jobs:
  build_wheels:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Setup NodeJS LTS 🕸️
        uses: actions/setup-node@v3
        with:
          node-version: 16.18

      - name: Setup Python 🐍
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: 'pip'

      - name: Install Dependencies 📥
        run: |
          pip install --upgrade pip setuptools twine wheel
          pip install -r ./requirements.txt
          npm i

      - name: Build Theme 🏗️
        run: npx webpack

      - name: Build Wheels ☸️
        run: |
          python setup.py bdist_wheel
          python setup.py sdist

      - name: Cache Release 💾
        uses: actions/cache@v3
        with:
          path: ./dist
          key: dff-sphinx-theme-wheel

  upload_release_to_pypi:
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:

      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Setup Python 🐍
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: 'pip'

      - name: Restore Release 📚
        uses: actions/cache@v3
        with:
          path: ./dist
          key: dff-sphinx-theme-wheel

      - name: Upload Binaries to PyPi via Twine 🪢
        env:
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: twine upload --verbose -u '__token__' dist/*

  upload_release_to_github:
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:

      - name: Restore Release 📚
        uses: actions/cache@v3
        with:
          path: ./dist
          key: dff-sphinx-theme-wheel

      - name: Get Release Tag Name 🏷️
        run: echo "TAG=$(basename -- $(find ./dist -type f -iname "*.tar.gz") | grep -Po '\d+\.\d+\.\d+')" >> $GITHUB_ENV

      - name: Upload Binaries to GitHub Releases 📦
        uses: svenstaro/upload-release-action@v2
        with:
          file: dist/*
          tag: ${{ env.TAG }}
          overwrite: true
          file_glob: true

  deploy_demo_module_to_github_pages:
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:

      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Restore Release 📚
        uses: actions/cache@v3
        with:
          path: ./dist
          key: dff-sphinx-theme-wheel

      - name: Setup Python 🐍
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Dependencies and Wheels 📩
        run: |
          pip install ./dist/dff_sphinx_theme-*.whl
          pip install -r ./demo/requirements.txt

      - name: Build Demo Module 👁️
        run: sphinx-build -D html_theme_options.base_url=/dff_sphinx_theme/ demo/docs web-build

      - name: NoJekyll ❌
        run: touch ./build/.nojekyll

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: ./web-build/
          single-commit: True
